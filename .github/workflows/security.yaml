name: Security Scanning

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    # Run security scans weekly on Mondays at 2 AM UTC
    - cron: '0 2 * * 1'

jobs:
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH,MEDIUM'
        exit-code: '1'
        trivy-config: 'trivy.yaml'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'

  code-quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: true

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: v1.55
        args: --timeout=5m
        skip-pkg-cache: true
        skip-build-cache: true

  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: true

    - name: Run Go mod tidy
      run: |
        go mod tidy
        go mod verify

    - name: Run Go list -deps
      run: |
        go list -deps -json ./... | go-licenses json > licenses.json

    - name: Check for license compliance
      run: |
        go-licenses check ./...

    - name: Generate SBOM
      uses: anchore/sbom-action@v0
      with:
        image: 'ghcr.io/kaniko-project/executor:latest'
        artifact-type: 'spdx'

  secret-scanning:
    name: Secret Scanning
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Run Trivy for secret scanning
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'table'
        secret-scanning: true
        exit-code: '1'

  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Go Setup
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Checkout additional submodules
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y rpm

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        queries: ${{ matrix.queries }}
      continue-on-error: true

    - name: Autobuild
      uses: github/codeql-action/autobuild@v2
      continue-on-error: true

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/perform-analysis@v2
      continue-on-error: true

    - name: Upload results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'codeql-analysis.sarif'